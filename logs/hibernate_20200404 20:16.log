[DEBUG] 2020-04-04 20:16:17.462 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-04 20:16:17.465 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-04 20:16:17.470 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-04 20:16:17.557 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-04 20:16:17.560 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-04 20:16:17.754 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-04-04 20:16:17.755 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-04-04 20:16:17.761 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-04 20:16:18.030 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-04 20:16:18.049 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-04 20:16:18.050 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-04 20:16:18.066 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-04 20:16:18.092 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6940f685
[DEBUG] 2020-04-04 20:16:18.093 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6940f685
[DEBUG] 2020-04-04 20:16:18.093 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6940f685
[DEBUG] 2020-04-04 20:16:18.093 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@783115d9
[DEBUG] 2020-04-04 20:16:18.093 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@363a3d15
[DEBUG] 2020-04-04 20:16:18.094 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@499683c4
[DEBUG] 2020-04-04 20:16:18.095 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e48bf9a
[DEBUG] 2020-04-04 20:16:18.095 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e48bf9a
[DEBUG] 2020-04-04 20:16:18.095 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e48bf9a
[DEBUG] 2020-04-04 20:16:18.095 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5ff90645
[DEBUG] 2020-04-04 20:16:18.095 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5ff90645
[DEBUG] 2020-04-04 20:16:18.095 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ff90645
[DEBUG] 2020-04-04 20:16:18.096 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5533dc72
[DEBUG] 2020-04-04 20:16:18.096 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5533dc72
[DEBUG] 2020-04-04 20:16:18.096 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5533dc72
[DEBUG] 2020-04-04 20:16:18.097 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@164a62bf
[DEBUG] 2020-04-04 20:16:18.097 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@164a62bf
[DEBUG] 2020-04-04 20:16:18.097 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@164a62bf
[DEBUG] 2020-04-04 20:16:18.098 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@75769ab0
[DEBUG] 2020-04-04 20:16:18.098 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@75769ab0
[DEBUG] 2020-04-04 20:16:18.098 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@75769ab0
[DEBUG] 2020-04-04 20:16:18.098 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c59e45e
[DEBUG] 2020-04-04 20:16:18.099 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c59e45e
[DEBUG] 2020-04-04 20:16:18.099 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c59e45e
[DEBUG] 2020-04-04 20:16:18.099 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36fcf6c0
[DEBUG] 2020-04-04 20:16:18.099 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36fcf6c0
[DEBUG] 2020-04-04 20:16:18.099 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36fcf6c0
[DEBUG] 2020-04-04 20:16:18.100 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@713064e8
[DEBUG] 2020-04-04 20:16:18.100 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@713064e8
[DEBUG] 2020-04-04 20:16:18.100 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ae95707
[DEBUG] 2020-04-04 20:16:18.100 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ae95707
[DEBUG] 2020-04-04 20:16:18.101 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@30e6a763
[DEBUG] 2020-04-04 20:16:18.101 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e6a763
[DEBUG] 2020-04-04 20:16:18.101 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d6a6bee
[DEBUG] 2020-04-04 20:16:18.101 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@670ce331
[DEBUG] 2020-04-04 20:16:18.102 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@41f4fe5
[DEBUG] 2020-04-04 20:16:18.102 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@41f4fe5
[DEBUG] 2020-04-04 20:16:18.102 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@390877d2
[DEBUG] 2020-04-04 20:16:18.103 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@390877d2
[DEBUG] 2020-04-04 20:16:18.106 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4f453e63
[DEBUG] 2020-04-04 20:16:18.106 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4f453e63
[DEBUG] 2020-04-04 20:16:18.107 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@221dad51
[DEBUG] 2020-04-04 20:16:18.107 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@221dad51
[DEBUG] 2020-04-04 20:16:18.108 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2015b2cd
[DEBUG] 2020-04-04 20:16:18.108 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2015b2cd
[DEBUG] 2020-04-04 20:16:18.109 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e1b9411
[DEBUG] 2020-04-04 20:16:18.109 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e1b9411
[DEBUG] 2020-04-04 20:16:18.110 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46cb98a3
[DEBUG] 2020-04-04 20:16:18.110 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46cb98a3
[DEBUG] 2020-04-04 20:16:18.111 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a23350
[DEBUG] 2020-04-04 20:16:18.111 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a23350
[DEBUG] 2020-04-04 20:16:18.112 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@263bbfeb
[DEBUG] 2020-04-04 20:16:18.112 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@263bbfeb
[DEBUG] 2020-04-04 20:16:18.113 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7ea899a9
[DEBUG] 2020-04-04 20:16:18.113 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ea899a9
[DEBUG] 2020-04-04 20:16:18.113 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@756b58a7
[DEBUG] 2020-04-04 20:16:18.114 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@756b58a7
[DEBUG] 2020-04-04 20:16:18.114 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@21c7208d
[DEBUG] 2020-04-04 20:16:18.114 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@21c7208d
[DEBUG] 2020-04-04 20:16:18.114 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@21c7208d
[DEBUG] 2020-04-04 20:16:18.115 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a8cbffe
[DEBUG] 2020-04-04 20:16:18.115 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7d5508e0
[DEBUG] 2020-04-04 20:16:18.116 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7d5508e0
[DEBUG] 2020-04-04 20:16:18.116 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7d5508e0
[DEBUG] 2020-04-04 20:16:18.116 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b84f14
[DEBUG] 2020-04-04 20:16:18.117 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@77e7246b
[DEBUG] 2020-04-04 20:16:18.117 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77e7246b
[DEBUG] 2020-04-04 20:16:18.117 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4726927c
[DEBUG] 2020-04-04 20:16:18.117 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4726927c
[DEBUG] 2020-04-04 20:16:18.118 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@10acd6
[DEBUG] 2020-04-04 20:16:18.118 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@10acd6
[DEBUG] 2020-04-04 20:16:18.118 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f651f93
[DEBUG] 2020-04-04 20:16:18.119 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f651f93
[DEBUG] 2020-04-04 20:16:18.119 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a34e9f
[DEBUG] 2020-04-04 20:16:18.119 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a34e9f
[DEBUG] 2020-04-04 20:16:18.119 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6240651f
[DEBUG] 2020-04-04 20:16:18.120 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@43da41e
[DEBUG] 2020-04-04 20:16:18.120 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@43da41e
[DEBUG] 2020-04-04 20:16:18.120 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@43da41e
[DEBUG] 2020-04-04 20:16:18.121 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bd3d05e
[DEBUG] 2020-04-04 20:16:18.121 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bd3d05e
[DEBUG] 2020-04-04 20:16:18.121 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bd3d05e
[DEBUG] 2020-04-04 20:16:18.128 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6ab7ce48
[DEBUG] 2020-04-04 20:16:18.128 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2e5ee2c9
[DEBUG] 2020-04-04 20:16:18.129 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@25a5c7db
[DEBUG] 2020-04-04 20:16:18.129 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@25a5c7db
[DEBUG] 2020-04-04 20:16:18.129 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@25a5c7db
[DEBUG] 2020-04-04 20:16:18.130 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7f5eae0f
[DEBUG] 2020-04-04 20:16:18.130 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7f5eae0f
[DEBUG] 2020-04-04 20:16:18.130 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7f5eae0f
[DEBUG] 2020-04-04 20:16:18.130 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@b0e5507
[DEBUG] 2020-04-04 20:16:18.130 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1108adc8
[DEBUG] 2020-04-04 20:16:18.133 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a1f45ed
[DEBUG] 2020-04-04 20:16:18.133 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1f45ed
[DEBUG] 2020-04-04 20:16:18.134 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c6c6f24
[DEBUG] 2020-04-04 20:16:18.134 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4096aa05
[DEBUG] 2020-04-04 20:16:18.134 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4096aa05
[DEBUG] 2020-04-04 20:16:18.136 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4088741b
[DEBUG] 2020-04-04 20:16:18.136 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4088741b
[DEBUG] 2020-04-04 20:16:18.137 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@205bed61
[DEBUG] 2020-04-04 20:16:18.137 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c2b58c0
[DEBUG] 2020-04-04 20:16:18.138 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@760cf594
[DEBUG] 2020-04-04 20:16:18.141 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3681037
[DEBUG] 2020-04-04 20:16:18.141 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3681037
[DEBUG] 2020-04-04 20:16:18.141 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5eed2d86
[DEBUG] 2020-04-04 20:16:18.143 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33d53216
[DEBUG] 2020-04-04 20:16:18.143 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69a2b3b6
[DEBUG] 2020-04-04 20:16:18.143 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f3e7344
[DEBUG] 2020-04-04 20:16:18.143 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7808f638
[DEBUG] 2020-04-04 20:16:18.144 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62d73ead
[DEBUG] 2020-04-04 20:16:18.144 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e141e42
[DEBUG] 2020-04-04 20:16:18.144 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@228cea97
[DEBUG] 2020-04-04 20:16:18.164 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-04 20:16:18.165 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-04 20:16:18.166 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 20:16:18.167 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 20:16:18.167 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-04 20:16:18.168 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-04 20:16:18.168 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-04 20:16:18.170 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 20:16:18.171 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-04 20:16:18.171 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-04 20:16:18.171 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-04 20:16:18.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-04 20:16:18.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 20:16:18.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2020-04-04 20:16:18.175 [main] ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the c3p0 provider class was not found on the classpath; these properties are going to be ignored.
[WARN ] 2020-04-04 20:16:18.177 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2020-04-04 20:16:18.177 [main] pooling - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test_blog]
[INFO ] 2020-04-04 20:16:18.177 [main] pooling - HHH10001001: Connection properties: {password=jeyTesting12, user=tester}
[INFO ] 2020-04-04 20:16:18.178 [main] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2020-04-04 20:16:18.179 [main] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2020-04-04 20:16:18.179 [main] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2020-04-04 20:16:18.225 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-04-04 20:16:18.225 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
[DEBUG] 2020-04-04 20:16:18.225 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-04 20:16:18.235 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-04-04 20:16:18.248 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-04 20:16:18.408 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-04 20:16:18.463 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-04 20:16:18.467 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@472a11ae] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@dc79225]
[DEBUG] 2020-04-04 20:16:18.568 [main] AnnotationBinder - Binding entity from annotated class: com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:16:18.586 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 20:16:18.589 [main] EntityBinder - Import with entity name Post
[DEBUG] 2020-04-04 20:16:18.592 [main] EntityBinder - Bind entity com.jeyblog.entity.Post on table Post
[DEBUG] 2020-04-04 20:16:18.610 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.612 [main] PropertyBinder - MetadataSourceProcessor property postId with lazy=false
[DEBUG] 2020-04-04 20:16:18.613 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:postId]
[DEBUG] 2020-04-04 20:16:18.615 [main] SimpleValueBinder - building SimpleValue for postId
[DEBUG] 2020-04-04 20:16:18.616 [main] PropertyBinder - Building property postId
[DEBUG] 2020-04-04 20:16:18.618 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 20:16:18.621 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.621 [main] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 20:16:18.621 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:author]
[DEBUG] 2020-04-04 20:16:18.622 [main] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 20:16:18.622 [main] PropertyBinder - Building property author
[DEBUG] 2020-04-04 20:16:18.623 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.623 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-04-04 20:16:18.623 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:category]
[DEBUG] 2020-04-04 20:16:18.624 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-04-04 20:16:18.624 [main] PropertyBinder - Building property category
[DEBUG] 2020-04-04 20:16:18.624 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.624 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 20:16:18.624 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:createdAt]
[DEBUG] 2020-04-04 20:16:18.624 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 20:16:18.624 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 20:16:18.638 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.638 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 20:16:18.638 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:description]
[DEBUG] 2020-04-04 20:16:18.638 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 20:16:18.642 [main] PropertyBinder - Building property description
[DEBUG] 2020-04-04 20:16:18.642 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=publication_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.642 [main] PropertyBinder - MetadataSourceProcessor property pubDate with lazy=false
[DEBUG] 2020-04-04 20:16:18.642 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:pubDate]
[DEBUG] 2020-04-04 20:16:18.642 [main] SimpleValueBinder - building SimpleValue for pubDate
[DEBUG] 2020-04-04 20:16:18.642 [main] PropertyBinder - Building property pubDate
[DEBUG] 2020-04-04 20:16:18.642 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.643 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 20:16:18.644 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:title]
[DEBUG] 2020-04-04 20:16:18.644 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 20:16:18.644 [main] PropertyBinder - Building property title
[DEBUG] 2020-04-04 20:16:18.644 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:16:18.644 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 20:16:18.644 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:updatedAt]
[DEBUG] 2020-04-04 20:16:18.644 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 20:16:18.644 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for postId
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for pubDate
[DEBUG] 2020-04-04 20:16:18.646 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 20:16:18.647 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 20:16:18.647 [main] PrimaryKey - Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[DEBUG] 2020-04-04 20:16:18.678 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - SessionFactory name : null
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Statistics: disabled
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-04 20:16:18.679 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Named query checking : enabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-04 20:16:18.680 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-04 20:16:18.720 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-04 20:16:18.734 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-04 20:16:18.734 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/jey-blog/target/test-classes:/home/student/jey-blog/target/classes:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-catalina/8.5.3/tomcat-catalina-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.3/tomcat-servlet-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.3/tomcat-jsp-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.3/tomcat-el-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.3/tomcat-juli-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.3/tomcat-annotations-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-api/8.5.3/tomcat-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-jni/8.5.3/tomcat-jni-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-coyote/8.5.3/tomcat-coyote-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-util/8.5.3/tomcat-util-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.3/tomcat-util-scan-8.5.3.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/projectlombok/lombok/1.18.10/lombok-1.18.10.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.jeyblog.perisistence.BlogPostDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=jeyTesting12, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-45-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_blog, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/jey-blog, os.arch=amd64, connection.username=tester, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@71b639d0, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_blog, java.class.version=55.0}
[DEBUG] 2020-04-04 20:16:18.750 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-04-04 20:16:18.750 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-04 20:16:18.750 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-04 20:16:18.751 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@472a11ae] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2e7157c7]
[DEBUG] 2020-04-04 20:16:18.804 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.jeyblog.entity.Post] is safe
[DEBUG] 2020-04-04 20:16:18.805 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:16:18.816 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.jeyblog.entity.Post] is safe
[DEBUG] 2020-04-04 20:16:18.816 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:16:19.174 [main] AbstractEntityPersister - Static SQL for entity: com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:16:19.174 [main] AbstractEntityPersister -  Version select: select post_id from Post where post_id =?
[DEBUG] 2020-04-04 20:16:19.175 [main] AbstractEntityPersister -  Snapshot select: select post_.post_id, post_.author as author2_0_, post_.category as category3_0_, post_.created_at as created_4_0_, post_.description as descript5_0_, post_.publication_date as publicat6_0_, post_.title as title7_0_, post_.updated_at as updated_8_0_ from Post post_ where post_.post_id=?
[DEBUG] 2020-04-04 20:16:19.175 [main] AbstractEntityPersister -  Insert 0: insert into Post (author, category, created_at, description, publication_date, title, updated_at, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 20:16:19.175 [main] AbstractEntityPersister -  Update 0: update Post set author=?, category=?, created_at=?, description=?, publication_date=?, title=?, updated_at=? where post_id=?
[DEBUG] 2020-04-04 20:16:19.175 [main] AbstractEntityPersister -  Delete 0: delete from Post where post_id=?
[DEBUG] 2020-04-04 20:16:19.176 [main] AbstractEntityPersister -  Identity insert: insert into Post (author, category, created_at, description, publication_date, title, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 20:16:19.191 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e25d3f]
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : pubDate
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 20:16:19.192 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 20:16:19.192 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 20:16:19.199 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 20:16:19.201 [main] LoadPlanTreePrinter - LoadPlan(entity=com.jeyblog.entity.Post)
    - Returns
       - EntityReturnImpl(entity=com.jeyblog.entity.Post, querySpaceUid=<gen:0>, path=com.jeyblog.entity.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jeyblog.entity.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

[DEBUG] 2020-04-04 20:16:19.205 [main] EntityLoader - Static select for entity com.jeyblog.entity.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:16:19.205 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3e3085]
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : pubDate
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 20:16:19.207 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 20:16:19.207 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 20:16:19.207 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 20:16:19.207 [main] LoadPlanTreePrinter - LoadPlan(entity=com.jeyblog.entity.Post)
    - Returns
       - EntityReturnImpl(entity=com.jeyblog.entity.Post, querySpaceUid=<gen:0>, path=com.jeyblog.entity.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jeyblog.entity.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

[DEBUG] 2020-04-04 20:16:19.208 [main] EntityLoader - Static select for entity com.jeyblog.entity.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:16:19.217 [main] Loader - Static select for action ACTION_MERGE on entity com.jeyblog.entity.Post: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:16:19.217 [main] Loader - Static select for action ACTION_REFRESH on entity com.jeyblog.entity.Post: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:16:19.242 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-04 20:16:19.242 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-04 20:16:19.243 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-04 20:16:19.248 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-04 20:16:19.248 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-04 20:16:19.248 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-04 20:16:19.249 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-04 20:16:19.251 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@592ca48c
[DEBUG] 2020-04-04 20:16:19.252 [main] SessionFactoryRegistry - Registering SessionFactory: eca6f95a-8d9f-4b4d-aa23-2f294a18df4f (<unnamed>)
[DEBUG] 2020-04-04 20:16:19.253 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-04-04 20:16:19.304 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-04-04 20:16:19.322 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0
[DEBUG] 2020-04-04 20:16:19.332 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6c9b44bf
[DEBUG] 2020-04-04 20:16:19.353 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.jeyblog.entity.Post as generatedAlias0
[DEBUG] 2020-04-04 20:16:19.357 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 20:16:19.368 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'jeyblog'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Post'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-04 20:16:19.380 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-04 20:16:19.390 [main] FromElement - FromClause{level=1} : com.jeyblog.entity.Post (generatedAlias0) -> post0_
[DEBUG] 2020-04-04 20:16:19.391 [main] FromReferenceNode - Resolved : generatedAlias0 -> post0_.post_id
[DEBUG] 2020-04-04 20:16:19.393 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-04 20:16:19.393 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Post post0_ ) )
[DEBUG] 2020-04-04 20:16:19.398 [main] JoinProcessor - Using FROM fragment [Post post0_]
[DEBUG] 2020-04-04 20:16:19.399 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-04 20:16:19.400 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Post)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_0_' {alias=generatedAlias0, className=com.jeyblog.entity.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.author as author2_0_, post0_.category as category3_0_, post0_.created_at as created_4_0_, post0_.description as descript5_0_, post0_.publication_date as publicat6_0_, post0_.title as title7_0_, post0_.updated_at as updated_8_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Post,tableAlias=post0_,origin=null,columns={,className=com.jeyblog.entity.Post}}

[DEBUG] 2020-04-04 20:16:19.400 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 20:16:19.403 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.jeyblog.entity.Post as generatedAlias0
[DEBUG] 2020-04-04 20:16:19.404 [main] QueryTranslatorImpl - SQL: select post0_.post_id as post_id1_0_, post0_.author as author2_0_, post0_.category as category3_0_, post0_.created_at as created_4_0_, post0_.description as descript5_0_, post0_.publication_date as publicat6_0_, post0_.title as title7_0_, post0_.updated_at as updated_8_0_ from Post post0_
[DEBUG] 2020-04-04 20:16:19.404 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 20:16:19.412 [main] SQL - select post0_.post_id as post_id1_0_, post0_.author as author2_0_, post0_.category as category3_0_, post0_.created_at as created_4_0_, post0_.description as descript5_0_, post0_.publication_date as publicat6_0_, post0_.title as title7_0_, post0_.updated_at as updated_8_0_ from Post post0_
[DEBUG] 2020-04-04 20:16:19.454 [main] Loader - Result set row: 0
[DEBUG] 2020-04-04 20:16:19.459 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#1]
[DEBUG] 2020-04-04 20:16:19.464 [main] Loader - Result set row: 1
[DEBUG] 2020-04-04 20:16:19.464 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#2]
[DEBUG] 2020-04-04 20:16:19.464 [main] Loader - Result set row: 2
[DEBUG] 2020-04-04 20:16:19.464 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#3]
[DEBUG] 2020-04-04 20:16:19.465 [main] Loader - Result set row: 3
[DEBUG] 2020-04-04 20:16:19.465 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#4]
[DEBUG] 2020-04-04 20:16:19.465 [main] Loader - Result set row: 4
[DEBUG] 2020-04-04 20:16:19.465 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#5]
[DEBUG] 2020-04-04 20:16:19.466 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#1]
[DEBUG] 2020-04-04 20:16:19.466 [main] TwoPhaseLoad - Processing attribute `author` : value = James
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Processing attribute `category` : value = Education
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Processing attribute `description` : value = Hibernate ORM is concerned with helping your application to achieve persistence.
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Processing attribute `title` : value = How to create a generic Dao
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.467 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#1]
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#2]
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Processing attribute `author` : value = Henry
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Processing attribute `category` : value = Education
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.468 [main] TwoPhaseLoad - Processing attribute `description` : value = So what is persistence? Persistence simply means that we would like our application’s data to outlive the applications process.
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Processing attribute `title` : value = Hope
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#2]
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#3]
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Processing attribute `author` : value = Chantal
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.469 [main] TwoPhaseLoad - Processing attribute `category` : value = Politics
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `description` : value =  In Java terms, we would like the state of (some of) our objects to live beyond the scope of the JVM so that the same state is available later.
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `title` : value = Peace
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#3]
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#4]
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `author` : value = Nadine
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Processing attribute `category` : value = Social
[DEBUG] 2020-04-04 20:16:19.470 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Processing attribute `description` : value = So what is persistence?
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Processing attribute `title` : value = The happiness
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.471 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.477 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.478 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#4]
[DEBUG] 2020-04-04 20:16:19.483 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#5]
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `author` : value = Ella
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `category` : value = Politics
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `description` : value = Hibernate ORM is concerned with helping your application to achieve persistence.
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `title` : value = Great Dane
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:16:17
[DEBUG] 2020-04-04 20:16:19.491 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:16:19.492 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#5]
[DEBUG] 2020-04-04 20:16:19.508 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
