[DEBUG] 2020-04-04 20:22:19.294 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-04 20:22:19.305 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-04 20:22:19.313 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-04 20:22:19.418 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-04 20:22:19.425 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-04 20:22:19.709 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-04-04 20:22:19.709 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-04-04 20:22:19.717 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-04 20:22:19.980 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-04 20:22:20.000 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-04 20:22:20.001 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-04 20:22:20.016 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-04 20:22:20.043 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3402b4c9
[DEBUG] 2020-04-04 20:22:20.044 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3402b4c9
[DEBUG] 2020-04-04 20:22:20.044 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3402b4c9
[DEBUG] 2020-04-04 20:22:20.044 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@173f73e7
[DEBUG] 2020-04-04 20:22:20.045 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@25da615a
[DEBUG] 2020-04-04 20:22:20.045 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@75308740
[DEBUG] 2020-04-04 20:22:20.046 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@373f7450
[DEBUG] 2020-04-04 20:22:20.047 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@373f7450
[DEBUG] 2020-04-04 20:22:20.047 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@373f7450
[DEBUG] 2020-04-04 20:22:20.047 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2c768ada
[DEBUG] 2020-04-04 20:22:20.048 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2c768ada
[DEBUG] 2020-04-04 20:22:20.048 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c768ada
[DEBUG] 2020-04-04 20:22:20.049 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a32fb6
[DEBUG] 2020-04-04 20:22:20.049 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2a32fb6
[DEBUG] 2020-04-04 20:22:20.049 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a32fb6
[DEBUG] 2020-04-04 20:22:20.050 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6009bea
[DEBUG] 2020-04-04 20:22:20.050 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6009bea
[DEBUG] 2020-04-04 20:22:20.050 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6009bea
[DEBUG] 2020-04-04 20:22:20.051 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@431f1eaf
[DEBUG] 2020-04-04 20:22:20.051 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@431f1eaf
[DEBUG] 2020-04-04 20:22:20.051 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@431f1eaf
[DEBUG] 2020-04-04 20:22:20.052 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56078cea
[DEBUG] 2020-04-04 20:22:20.052 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56078cea
[DEBUG] 2020-04-04 20:22:20.052 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56078cea
[DEBUG] 2020-04-04 20:22:20.053 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62a4417
[DEBUG] 2020-04-04 20:22:20.053 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@62a4417
[DEBUG] 2020-04-04 20:22:20.054 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62a4417
[DEBUG] 2020-04-04 20:22:20.055 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e5d4f6b
[DEBUG] 2020-04-04 20:22:20.055 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e5d4f6b
[DEBUG] 2020-04-04 20:22:20.059 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ae0b770
[DEBUG] 2020-04-04 20:22:20.059 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ae0b770
[DEBUG] 2020-04-04 20:22:20.059 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@36ddaebf
[DEBUG] 2020-04-04 20:22:20.059 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@36ddaebf
[DEBUG] 2020-04-04 20:22:20.060 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cff0139
[DEBUG] 2020-04-04 20:22:20.060 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f096f37
[DEBUG] 2020-04-04 20:22:20.061 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@39e43310
[DEBUG] 2020-04-04 20:22:20.061 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@39e43310
[DEBUG] 2020-04-04 20:22:20.061 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7fc7c4a
[DEBUG] 2020-04-04 20:22:20.062 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7fc7c4a
[DEBUG] 2020-04-04 20:22:20.065 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6b0615ae
[DEBUG] 2020-04-04 20:22:20.066 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b0615ae
[DEBUG] 2020-04-04 20:22:20.067 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@240f6c41
[DEBUG] 2020-04-04 20:22:20.067 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@240f6c41
[DEBUG] 2020-04-04 20:22:20.068 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@73a19967
[DEBUG] 2020-04-04 20:22:20.068 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@73a19967
[DEBUG] 2020-04-04 20:22:20.069 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3d49fd31
[DEBUG] 2020-04-04 20:22:20.069 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3d49fd31
[DEBUG] 2020-04-04 20:22:20.070 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@470a659f
[DEBUG] 2020-04-04 20:22:20.070 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@470a659f
[DEBUG] 2020-04-04 20:22:20.071 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47447ccf
[DEBUG] 2020-04-04 20:22:20.071 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47447ccf
[DEBUG] 2020-04-04 20:22:20.072 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4b1a43d8
[DEBUG] 2020-04-04 20:22:20.072 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4b1a43d8
[DEBUG] 2020-04-04 20:22:20.073 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b5f25
[DEBUG] 2020-04-04 20:22:20.074 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b5f25
[DEBUG] 2020-04-04 20:22:20.074 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4417af13
[DEBUG] 2020-04-04 20:22:20.075 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4417af13
[DEBUG] 2020-04-04 20:22:20.075 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@96a75da
[DEBUG] 2020-04-04 20:22:20.076 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@96a75da
[DEBUG] 2020-04-04 20:22:20.076 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@96a75da
[DEBUG] 2020-04-04 20:22:20.076 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7f7af971
[DEBUG] 2020-04-04 20:22:20.077 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5b84f14
[DEBUG] 2020-04-04 20:22:20.077 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b84f14
[DEBUG] 2020-04-04 20:22:20.077 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b84f14
[DEBUG] 2020-04-04 20:22:20.078 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d8b319e
[DEBUG] 2020-04-04 20:22:20.079 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5017e1
[DEBUG] 2020-04-04 20:22:20.080 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5017e1
[DEBUG] 2020-04-04 20:22:20.081 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@10ef5fa0
[DEBUG] 2020-04-04 20:22:20.081 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10ef5fa0
[DEBUG] 2020-04-04 20:22:20.081 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@571a9686
[DEBUG] 2020-04-04 20:22:20.081 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@571a9686
[DEBUG] 2020-04-04 20:22:20.082 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4e93dcb9
[DEBUG] 2020-04-04 20:22:20.082 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e93dcb9
[DEBUG] 2020-04-04 20:22:20.083 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cf7298d
[DEBUG] 2020-04-04 20:22:20.083 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cf7298d
[DEBUG] 2020-04-04 20:22:20.083 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51a8313b
[DEBUG] 2020-04-04 20:22:20.084 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4eb45fec
[DEBUG] 2020-04-04 20:22:20.084 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4eb45fec
[DEBUG] 2020-04-04 20:22:20.084 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4eb45fec
[DEBUG] 2020-04-04 20:22:20.085 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@459cfcca
[DEBUG] 2020-04-04 20:22:20.085 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@459cfcca
[DEBUG] 2020-04-04 20:22:20.085 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@459cfcca
[DEBUG] 2020-04-04 20:22:20.085 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@55a609dd
[DEBUG] 2020-04-04 20:22:20.086 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@719bb3b4
[DEBUG] 2020-04-04 20:22:20.086 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3c782d8e
[DEBUG] 2020-04-04 20:22:20.086 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3c782d8e
[DEBUG] 2020-04-04 20:22:20.086 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3c782d8e
[DEBUG] 2020-04-04 20:22:20.087 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6bbe50c9
[DEBUG] 2020-04-04 20:22:20.087 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6bbe50c9
[DEBUG] 2020-04-04 20:22:20.087 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6bbe50c9
[DEBUG] 2020-04-04 20:22:20.087 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@8a98f38
[DEBUG] 2020-04-04 20:22:20.088 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@41ffaeb8
[DEBUG] 2020-04-04 20:22:20.089 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2eb917d0
[DEBUG] 2020-04-04 20:22:20.089 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2eb917d0
[DEBUG] 2020-04-04 20:22:20.089 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a48a7f3
[DEBUG] 2020-04-04 20:22:20.090 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@71d8cfe7
[DEBUG] 2020-04-04 20:22:20.091 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@71d8cfe7
[DEBUG] 2020-04-04 20:22:20.092 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@129fed45
[DEBUG] 2020-04-04 20:22:20.092 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@129fed45
[DEBUG] 2020-04-04 20:22:20.092 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11b377c5
[DEBUG] 2020-04-04 20:22:20.092 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@702c436b
[DEBUG] 2020-04-04 20:22:20.093 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@20a05b32
[DEBUG] 2020-04-04 20:22:20.098 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@33d53216
[DEBUG] 2020-04-04 20:22:20.098 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33d53216
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62d73ead
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e141e42
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@228cea97
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d0a61c8
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@46731692
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@782bf610
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3db663d0
[DEBUG] 2020-04-04 20:22:20.099 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@73fc518f
[DEBUG] 2020-04-04 20:22:20.120 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-04 20:22:20.121 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-04 20:22:20.122 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 20:22:20.123 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 20:22:20.123 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-04 20:22:20.125 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-04 20:22:20.125 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-04 20:22:20.126 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 20:22:20.127 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-04 20:22:20.128 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-04 20:22:20.128 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-04 20:22:20.128 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-04 20:22:20.128 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 20:22:20.129 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2020-04-04 20:22:20.131 [main] ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the c3p0 provider class was not found on the classpath; these properties are going to be ignored.
[WARN ] 2020-04-04 20:22:20.133 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2020-04-04 20:22:20.134 [main] pooling - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/test_blog]
[INFO ] 2020-04-04 20:22:20.134 [main] pooling - HHH10001001: Connection properties: {password=jeyTesting12, user=tester}
[INFO ] 2020-04-04 20:22:20.134 [main] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2020-04-04 20:22:20.136 [main] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2020-04-04 20:22:20.136 [main] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2020-04-04 20:22:20.178 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-04-04 20:22:20.178 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
[DEBUG] 2020-04-04 20:22:20.178 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-04 20:22:20.190 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-04-04 20:22:20.202 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-04 20:22:20.231 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-04 20:22:20.264 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-04 20:22:20.266 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60cf62ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e0895f5]
[DEBUG] 2020-04-04 20:22:20.301 [main] AnnotationBinder - Binding entity from annotated class: com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:22:20.317 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 20:22:20.321 [main] EntityBinder - Import with entity name Post
[DEBUG] 2020-04-04 20:22:20.323 [main] EntityBinder - Bind entity com.jeyblog.entity.Post on table Post
[DEBUG] 2020-04-04 20:22:20.341 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.343 [main] PropertyBinder - MetadataSourceProcessor property postId with lazy=false
[DEBUG] 2020-04-04 20:22:20.344 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:postId]
[DEBUG] 2020-04-04 20:22:20.345 [main] SimpleValueBinder - building SimpleValue for postId
[DEBUG] 2020-04-04 20:22:20.348 [main] PropertyBinder - Building property postId
[DEBUG] 2020-04-04 20:22:20.350 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 20:22:20.352 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.352 [main] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 20:22:20.352 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:author]
[DEBUG] 2020-04-04 20:22:20.352 [main] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 20:22:20.352 [main] PropertyBinder - Building property author
[DEBUG] 2020-04-04 20:22:20.353 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.353 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-04-04 20:22:20.353 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:category]
[DEBUG] 2020-04-04 20:22:20.353 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-04-04 20:22:20.353 [main] PropertyBinder - Building property category
[DEBUG] 2020-04-04 20:22:20.353 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.353 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 20:22:20.353 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:createdAt]
[DEBUG] 2020-04-04 20:22:20.353 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 20:22:20.353 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 20:22:20.359 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.359 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 20:22:20.359 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:description]
[DEBUG] 2020-04-04 20:22:20.360 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 20:22:20.360 [main] PropertyBinder - Building property description
[DEBUG] 2020-04-04 20:22:20.360 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=publication_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.360 [main] PropertyBinder - MetadataSourceProcessor property pubDate with lazy=false
[DEBUG] 2020-04-04 20:22:20.360 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:pubDate]
[DEBUG] 2020-04-04 20:22:20.360 [main] SimpleValueBinder - building SimpleValue for pubDate
[DEBUG] 2020-04-04 20:22:20.360 [main] PropertyBinder - Building property pubDate
[DEBUG] 2020-04-04 20:22:20.360 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.360 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 20:22:20.360 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:title]
[DEBUG] 2020-04-04 20:22:20.360 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 20:22:20.360 [main] PropertyBinder - Building property title
[DEBUG] 2020-04-04 20:22:20.360 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Post), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 20:22:20.360 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 20:22:20.360 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.jeyblog.entity.Post:updatedAt]
[DEBUG] 2020-04-04 20:22:20.360 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 20:22:20.361 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 20:22:20.362 [main] SimpleValueBinder - Starting fillSimpleValue for postId
[DEBUG] 2020-04-04 20:22:20.362 [main] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 20:22:20.362 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-04-04 20:22:20.362 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 20:22:20.363 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 20:22:20.363 [main] SimpleValueBinder - Starting fillSimpleValue for pubDate
[DEBUG] 2020-04-04 20:22:20.363 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 20:22:20.363 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 20:22:20.363 [main] PrimaryKey - Forcing column [post_id] to be non-null as it is part of the primary key for table [post]
[DEBUG] 2020-04-04 20:22:20.389 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - SessionFactory name : null
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Statistics: disabled
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-04-04 20:22:20.390 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Named query checking : enabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-04 20:22:20.391 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-04 20:22:20.426 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-04 20:22:20.440 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-04 20:22:20.440 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/jey-blog/target/test-classes:/home/student/jey-blog/target/classes:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-catalina/8.5.3/tomcat-catalina-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.3/tomcat-servlet-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.3/tomcat-jsp-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.3/tomcat-el-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.3/tomcat-juli-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.3/tomcat-annotations-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-api/8.5.3/tomcat-api-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-jni/8.5.3/tomcat-jni-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-coyote/8.5.3/tomcat-coyote-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-util/8.5.3/tomcat-util-8.5.3.jar:/home/student/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.3/tomcat-util-scan-8.5.3.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/projectlombok/lombok/1.18.10/lombok-1.18.10.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.jeyblog.perisistence.BlogPostDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=jeyTesting12, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-45-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_blog, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/jey-blog, os.arch=amd64, connection.username=tester, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@542f6803, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_blog, java.class.version=55.0}
[DEBUG] 2020-04-04 20:22:20.452 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-04-04 20:22:20.452 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-04 20:22:20.453 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-04 20:22:20.453 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60cf62ad] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@25f723b0]
[DEBUG] 2020-04-04 20:22:20.486 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.jeyblog.entity.Post] is safe
[DEBUG] 2020-04-04 20:22:20.494 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:22:20.513 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.jeyblog.entity.Post] is safe
[DEBUG] 2020-04-04 20:22:20.514 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:22:20.825 [main] AbstractEntityPersister - Static SQL for entity: com.jeyblog.entity.Post
[DEBUG] 2020-04-04 20:22:20.825 [main] AbstractEntityPersister -  Version select: select post_id from Post where post_id =?
[DEBUG] 2020-04-04 20:22:20.825 [main] AbstractEntityPersister -  Snapshot select: select post_.post_id, post_.author as author2_0_, post_.category as category3_0_, post_.created_at as created_4_0_, post_.description as descript5_0_, post_.publication_date as publicat6_0_, post_.title as title7_0_, post_.updated_at as updated_8_0_ from Post post_ where post_.post_id=?
[DEBUG] 2020-04-04 20:22:20.825 [main] AbstractEntityPersister -  Insert 0: insert into Post (author, category, created_at, description, publication_date, title, updated_at, post_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 20:22:20.826 [main] AbstractEntityPersister -  Update 0: update Post set author=?, category=?, created_at=?, description=?, publication_date=?, title=?, updated_at=? where post_id=?
[DEBUG] 2020-04-04 20:22:20.826 [main] AbstractEntityPersister -  Delete 0: delete from Post where post_id=?
[DEBUG] 2020-04-04 20:22:20.828 [main] AbstractEntityPersister -  Identity insert: insert into Post (author, category, created_at, description, publication_date, title, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 20:22:20.856 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b57c345]
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : pubDate
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 20:22:20.857 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 20:22:20.857 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 20:22:20.864 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 20:22:20.866 [main] LoadPlanTreePrinter - LoadPlan(entity=com.jeyblog.entity.Post)
    - Returns
       - EntityReturnImpl(entity=com.jeyblog.entity.Post, querySpaceUid=<gen:0>, path=com.jeyblog.entity.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jeyblog.entity.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

[DEBUG] 2020-04-04 20:22:20.869 [main] EntityLoader - Static select for entity com.jeyblog.entity.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:22:20.869 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de6f1bc]
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : pubDate
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 20:22:20.871 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 20:22:20.871 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 20:22:20.871 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 20:22:20.871 [main] LoadPlanTreePrinter - LoadPlan(entity=com.jeyblog.entity.Post)
    - Returns
       - EntityReturnImpl(entity=com.jeyblog.entity.Post, querySpaceUid=<gen:0>, path=com.jeyblog.entity.Post)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jeyblog.entity.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

[DEBUG] 2020-04-04 20:22:20.871 [main] EntityLoader - Static select for entity com.jeyblog.entity.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:22:20.880 [main] Loader - Static select for action ACTION_MERGE on entity com.jeyblog.entity.Post: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:22:20.881 [main] Loader - Static select for action ACTION_REFRESH on entity com.jeyblog.entity.Post: select post0_.post_id as post_id1_0_0_, post0_.author as author2_0_0_, post0_.category as category3_0_0_, post0_.created_at as created_4_0_0_, post0_.description as descript5_0_0_, post0_.publication_date as publicat6_0_0_, post0_.title as title7_0_0_, post0_.updated_at as updated_8_0_0_ from Post post0_ where post0_.post_id=?
[DEBUG] 2020-04-04 20:22:20.899 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-04 20:22:20.899 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-04 20:22:20.899 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-04 20:22:20.912 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-04 20:22:20.913 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-04 20:22:20.913 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-04 20:22:20.913 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-04 20:22:20.919 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4017fe2c
[DEBUG] 2020-04-04 20:22:20.925 [main] SessionFactoryRegistry - Registering SessionFactory: 05a19900-3a84-4e88-aad8-e0a402844ccc (<unnamed>)
[DEBUG] 2020-04-04 20:22:20.925 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-04-04 20:22:20.984 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-04-04 20:22:21.001 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0
[DEBUG] 2020-04-04 20:22:21.014 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2416c658
[DEBUG] 2020-04-04 20:22:21.033 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.jeyblog.entity.Post as generatedAlias0
[DEBUG] 2020-04-04 20:22:21.037 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 20:22:21.041 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'jeyblog'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Post'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-04 20:22:21.054 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-04 20:22:21.061 [main] FromElement - FromClause{level=1} : com.jeyblog.entity.Post (generatedAlias0) -> post0_
[DEBUG] 2020-04-04 20:22:21.062 [main] FromReferenceNode - Resolved : generatedAlias0 -> post0_.post_id
[DEBUG] 2020-04-04 20:22:21.063 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-04 20:22:21.063 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Post post0_ ) )
[DEBUG] 2020-04-04 20:22:21.068 [main] JoinProcessor - Using FROM fragment [Post post0_]
[DEBUG] 2020-04-04 20:22:21.068 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-04 20:22:21.069 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Post)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_0_' {alias=generatedAlias0, className=com.jeyblog.entity.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.author as author2_0_, post0_.category as category3_0_, post0_.created_at as created_4_0_, post0_.description as descript5_0_, post0_.publication_date as publicat6_0_, post0_.title as title7_0_, post0_.updated_at as updated_8_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Post,tableAlias=post0_,origin=null,columns={,className=com.jeyblog.entity.Post}}

[DEBUG] 2020-04-04 20:22:21.069 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 20:22:21.072 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.jeyblog.entity.Post as generatedAlias0
[DEBUG] 2020-04-04 20:22:21.073 [main] QueryTranslatorImpl - SQL: select post0_.post_id as post_id1_0_, post0_.author as author2_0_, post0_.category as category3_0_, post0_.created_at as created_4_0_, post0_.description as descript5_0_, post0_.publication_date as publicat6_0_, post0_.title as title7_0_, post0_.updated_at as updated_8_0_ from Post post0_
[DEBUG] 2020-04-04 20:22:21.073 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 20:22:21.082 [main] SQL - select post0_.post_id as post_id1_0_, post0_.author as author2_0_, post0_.category as category3_0_, post0_.created_at as created_4_0_, post0_.description as descript5_0_, post0_.publication_date as publicat6_0_, post0_.title as title7_0_, post0_.updated_at as updated_8_0_ from Post post0_
[DEBUG] 2020-04-04 20:22:21.095 [main] Loader - Result set row: 0
[DEBUG] 2020-04-04 20:22:21.097 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#1]
[DEBUG] 2020-04-04 20:22:21.102 [main] Loader - Result set row: 1
[DEBUG] 2020-04-04 20:22:21.103 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#2]
[DEBUG] 2020-04-04 20:22:21.103 [main] Loader - Result set row: 2
[DEBUG] 2020-04-04 20:22:21.103 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#3]
[DEBUG] 2020-04-04 20:22:21.103 [main] Loader - Result set row: 3
[DEBUG] 2020-04-04 20:22:21.103 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#4]
[DEBUG] 2020-04-04 20:22:21.104 [main] Loader - Result set row: 4
[DEBUG] 2020-04-04 20:22:21.104 [main] Loader - Result row: EntityKey[com.jeyblog.entity.Post#5]
[DEBUG] 2020-04-04 20:22:21.104 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#1]
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `author` : value = James
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `category` : value = Education
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `description` : value = Hibernate ORM is concerned with helping your application to achieve persistence.
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `title` : value = How to create a generic Dao
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.105 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#1]
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#2]
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `author` : value = Henry
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `category` : value = Education
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `description` : value = So what is persistence? Persistence simply means that we would like our application’s data to outlive the applications process.
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `title` : value = Hope
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.106 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#2]
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#3]
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `author` : value = Chantal
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `category` : value = Politics
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `description` : value =  In Java terms, we would like the state of (some of) our objects to live beyond the scope of the JVM so that the same state is available later.
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `title` : value = Peace
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#3]
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#4]
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `author` : value = Nadine
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `category` : value = Social
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.107 [main] TwoPhaseLoad - Processing attribute `description` : value = So what is persistence?
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `title` : value = The happiness
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#4]
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Resolving attributes for [com.jeyblog.entity.Post#5]
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `author` : value = Ella
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `category` : value = Politics
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `description` : value = Hibernate ORM is concerned with helping your application to achieve persistence.
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `pubDate` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`pubDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `title` : value = Great Dane
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T20:22:19
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 20:22:21.108 [main] TwoPhaseLoad - Done materializing entity [com.jeyblog.entity.Post#5]
[DEBUG] 2020-04-04 20:22:21.110 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 20:22:21.248 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-04-04 20:22:21.249 [main] TransactionImpl - begin
[DEBUG] 2020-04-04 20:22:21.254 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-04-04 20:22:21.260 [main] SQL - insert into Post (author, category, created_at, description, publication_date, title, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 20:22:21.332 [main] SqlExceptionHelper - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Column 'publication_date' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025) ~[mysql-connector-java-8.0.17.jar:8.0.17]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3112) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3705) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:697) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:689) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:684) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.jeyblog.perisistence.GenericDao.create(GenericDao.java:55) [classes/:?]
	at com.jeyblog.perisistence.BlogPostDaoTest.createPost(BlogPostDaoTest.java:38) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) [junit-rt.jar:?]
[WARN ] 2020-04-04 20:22:21.342 [main] SqlExceptionHelper - SQL Error: 1048, SQLState: 23000
[ERROR] 2020-04-04 20:22:21.342 [main] SqlExceptionHelper - Column 'publication_date' cannot be null
